# Default values for whizard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

namespaceOverride: ""

global:
  # To help compatibility with other charts which use global.imagePullSecrets.
  # Allow either an array of {name: pullSecret} maps (k8s-style), or an array of strings (more common helm-style).
  imagePullSecrets: []
  #
  # Allow parent charts to override registry hostname
  imageRegistry: ""

  nodeSelector: {}

  whizard:
    image:
      registry: docker.io
      repository: thanosio/thanos
      tag: v0.38.0

hook:
  enabled: true
  image:
    registry: docker.io
    repository: kubesphere/kubectl
    tag: v1.27.12
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 64Mi
  backoffLimit: 3

selfMonitor:
  enabled: false

## Manages Service, Query, QueryFrontend, Router, Ingester, Store, Compactor and Ruler instances and components
##
controllerManager:
  enabled: true

  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  image:
    registry: docker.io
    repository: kubesphere/whizard-controller-manager
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  rbac:
    create: true

  config:
    create: false
    config: {}

adapter:
  enabled: true

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  rbac:
    create: true

  image:
    registry: docker.io
    repository: kubesphere/whizard-adapter
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.8.0"
  ## If null or unset, the enabled Service instance is used.
  defaultServiceReference: null
    # namespace:
    # name:
  ## If null or unset, the default Storage name is used.
  defaultStorageReference: null
    # namespace:
    # name:
  kubesphereAdapter:
    enabled: true
  web:
    enabled: true

# Deploy a Service instance
service:
  enabled: true

  tenantHeader: cluster
  defaultTenantId: unknown
  tenantLabelName: cluster

  ## If null or unset, the value is determined based on the created Storage instance.
  storage: null
  # namespace:
  # name:

  ## Set remote writes
  remoteWrites:
  # - name: remote
  #   url: remote_storage_address

  ## Set remote query
  remoteQuery:
    # url: remote_query_address

  compactorTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

    securityContext:
      fsGroup: 0
    dataVolume:
      emptyDir: {}
      # persistentVolumeClaim:
      #   spec:
      #     resources:
      #       requests:
      #         storage: 20Gi
      # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
      # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
      # persistentVolumeClaimRetentionPolicy:
      #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether to delete pvc when statefulset is deleted.
      #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether to delete pvc when statefulset is scaled down.

    retention:
      retentionRaw: 60d
      retention5m: 180d
      retention1h: 360d

    additionalFlags:
      - --block-files-concurrency=20
      - --compact.blocks-fetch-concurrency=5
      - --web.disable                                 # Disable Block Viewer UI.
      - --compact.enable-vertical-compaction
    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}

  gatewayTemplateSpec:
    image:
      registry: docker.io
      repository: kubesphere/whizard-monitoring-gateway
      tag: ""

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi


    securityContext: {}
    dataVolume: {}

    additionalFlags: []

    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}

  ingesterTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

    securityContext:
      fsGroup: 0
    dataVolume:
      emptyDir: {}
      # persistentVolumeClaim:
      #   spec:
      #     resources:
      #       requests:
      #         storage: 20Gi
      # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
      # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
      # persistentVolumeClaimRetentionPolicy:
      #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether to delete pvc when statefulset is deleted.
      #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether to delete pvc when statefulset is scaled down.


    additionalFlags:
      - --tsdb.out-of-order.time-window=10m         # Receive: Added parameter `--tsdb.out-of-order.time-window` to set time window for experimental out-of-order samples ingestion. Disabled by default (set to 0s). Please note if you enable this option and you use compactor, make sure you set the `--enable-vertical-compaction` flag, otherwise you might risk compactor halt.

    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}


  queryTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

    securityContext: {}
    dataVolume: {}

    replicaLabelNames:
      - prometheus_replica
      - receive_replica
      - ruler_replica

    additionalFlags:
      - --query.max-concurrent=200

    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}

    envoy:
      image:
        registry: docker.io
        repository: envoyproxy/envoy
        tag: v1.20.2
      resources: {}
      # limits:
      #   cpu: "2"
      #   memory: 4Gi
      # requests:
      #   cpu: 50m
      #   memory: 64Mi

  queryFrontendTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

    securityContext: {}
    dataVolume: {}

    cacheConfig: {}

    additionalFlags:
      - --no-query-range.align-range-with-step          # Disable query-range.align-range-with-step, the incoming query parameter remains the same (as required by the frontend), although it may reduce the cache-ability.
    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}

  routerTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

    securityContext: {}
    dataVolume: {}

    additionalFlags: []
    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}

  rulerTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

    securityContext:
      fsGroup: 0
    dataVolume:
      emptyDir: {}

    ruleSelectors:
      - matchLabels:
          role: alert-rules

    additionalFlags: []
    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}

    prometheusConfigReloader:
      image:
        registry: quay.io
        repository: prometheus-operator/prometheus-config-reloader
        tag: v0.81.0
      resources: {}
      # limits:
      #   cpu: "2"
      #   memory: 4Gi
      # requests:
      #   cpu: 50m
      #   memory: 64Mi

    rulerWriteProxy:
      image:
        registry: docker.io
        repository: kubesphere/cortex-tenant
        tag: v1.12.5

      resources: {}
      # limits:
      #   cpu: "2"
      #   memory: 4Gi
      # requests:
      #   cpu: 50m
      #   memory: 64Mi

    rulerQueryProxy:
      image:
        registry: docker.io
        repository: kubesphere/whizard-monitoring-gateway
        tag: ""
      resources: {}
      # limits:
      #   cpu: "2"
      #   memory: 4Gi
      # requests:
      #   cpu: 50m
      #   memory: 64Mi

  storeTemplateSpec:
    image: {}
    # registry: docker.io
    # repository: thanosio/thanos
    # tag: v0.38.0

    resources: {}
    # limits:
    #   cpu: "2"
    #   memory: 4Gi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi
    securityContext:
      fsGroup: 0
    dataVolume:
      emptyDir: {}
      # persistentVolumeClaim:
      #   spec:
      #     resources:
      #       requests:
      #         storage: 20Gi
      # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
      # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
      # persistentVolumeClaimRetentionPolicy:
      #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether to delete pvc when statefulset is deleted.
      #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether to delete pvc when statefulset is scaled down.

    indexCacheConfig: {}
    timeRanges:
      - maxTime: -36h

    additionalFlags:
      - --web.disable                   # Disable Block Viewer UI.
      - --no-cache-index-header         # Support disabling cache index header file. When toggled, Stores can run without needing persistent disks.
      # - --min-time=-14d               # Optional, time based partitioning

    ## Additional configuration which is not covered by the properties above. (passed through tpl)
    additionalConfig: {}


# Create a Storage instance
storage:
  create: false
  blockManager:
    enable: true
    ## If null or unset, the global.whizardImage is used.
    image: null
    # repository: thanosio/thanos
    # tag: v0.38.0
    serviceAccountName: ""          # If null or unset, the created controllerManager serviceAccountName is used.
    gc:
      image:
        registry: docker.io
        repository: kubesphere/whizard-monitoring-block-manager
        # Overrides the image tag whose default is the chart appVersion.
        tag: ""
  S3: {}


# Deploy an Gateway instance
gateway:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  image:
    registry: docker.io
    repository: kubesphere/whizard-monitoring-gateway
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  nodePort: 0

# Deploy an Query instance
query:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  genSignedCert: false
  httpServerTLSConfig: {}

  ## Additional configuration which is not covered by the properties above. (passed through tpl)
  additionalConfig:
    promqlEngine: thanos
  additionalConfigString: ""

# Deploy an Router instance
router:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  genSignedCert: false
  httpServerTLSConfig: {}

  ## Additional configuration which is not covered by the properties above. (passed through tpl)
  additionalConfig: {}
  additionalConfigString: ""

# Deploy an QueryFrontend instance
queryFrontend:
  enabled: true

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  genSignedCert: false
  httpServerTLSConfig: {}

  ## Additional configuration which is not covered by the properties above. (passed through tpl)
  additionalConfig: {}
  additionalConfigString: ""


# Deploy a Ruler instance
ruler:
  enabled: false

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## If null or unset, the global.whizardImage is used.
  image: null
    # repository: thanosio/thanos
    # tag: v0.38.0


  resources: {}
  securityContext:
    fsGroup: 0
  nodeSelector: {}
  tolerations: []
  affinity: {}

  replicas: 1

  shards: 1

  tenant: ''

  dataVolume:
    emptyDir: {}
    # persistentVolumeClaim:
    #   spec:
    #     resources:
    #       requests:
    #         storage: 20Gi
    # # persistentVolumeClaimRetentionPolicy requires the kubernetes version >= 1.23
    # # and its StatefulSetAutoDeletePVC feature gate to be enabled.
    # persistentVolumeClaimRetentionPolicy:
    #   whenDeleted: Retain # must be one of Retain and Delete, to specify whether delete pvc when statefulset is deleted.
    #   whenScaled: Retain # must be one of Retain and Delete, to spefify whether delete pvc when statefulset is scaled down.

  evaluationInterval: 1m

  additionalFlags: []

  ruleSelectors:
  - matchExpressions:
    - key: alerting.kubesphere.io/rule_level
      operator: In
      values:
      - global
  ruleNamespaceSeletor:
    matchExpressions:
    - key: kubesphere.io/namespace
      operator: In
      values:
      - kubesphere-monitoring-system

  ## If null or unset, the global.alertmanagersUrl is used.
  alertmanagersUrl:
  - dnssrv+http://alertmanager-operated.kubesphere-monitoring-system.svc:9093

# Deploy an Ingester instance
ingester:
  enabled: true

  # add `"monitoring.whizard.io/soft-tenant"="true"` label for the soft tenant creation ingester
  labels:
    "monitoring.whizard.io/soft-tenant": "true"

  ## If null or unset, the value is determined based on enabled Service instance
  serviceReference: null
    # namespace:
    # name:

  ## Additional configuration which is not covered by the properties above. (passed through tpl)
  additionalConfig: {}
  additionalConfigString: ""
